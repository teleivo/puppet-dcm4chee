#! /bin/sh
#
# /etc/init.d/dcm4chee -- startup script for the dcm4chee PACS
#
### BEGIN INIT INFO
# Provides:          dcm4chee
# Required-Start:    $local_fs $remote_fs $network $time
# Required-Stop:     $local_fs $remote_fs $network $time
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: DCM4CHEE PACS
# Description:       DCM4CHEE DICOM Image Manager
### END INIT INFO

# JBOSS configurations
JBOSS_HOME=${JBOSS_HOME:-"<%= @jboss_home_path %>"}
JBOSS_CONF=${JBOSS_CONF:-"default"}

PATH=/sbin:/usr/sbin:/bin:/usr/bin
DAEMON="${JBOSS_HOME}/bin/run.sh"

# Exit if the package is not installed
[ -x "$DAEMON" ] || exit 5

NAME="dcm4chee"
DESC="DCM4CHEE PACS"

DAEMON_ARGS="-c ${JBOSS_CONF} -b 0.0.0.0"
DAEMON_USER="dcm4chee"
# run jboss in background
# only then will signals to run.sh be forwarded to the jvm
export LAUNCH_JBOSS_IN_BACKGROUND=1

PIDDIR="/var/run/${NAME}"
PIDFILE="${PIDDIR}/${NAME}.pid"
SCRIPTNAME="/etc/init.d/${NAME}"

JAVAPTH=${JAVAPTH:-"<%= @java_path %>"}
if [ -z "`echo $PATH | grep $JAVAPTH`" ]; then
  export PATH=$PATH:$JAVAPTH
fi

# Define LSB functions.
. /lib/lsb/init-functions

#
# Function that starts the daemon/service
#
do_start()
{
	# Return
	#   0 if daemon has been started
	#   1 if daemon was already running
	#   2 if daemon could not be started

	if pidofproc -p $PIDFILE "$DAEMON" > /dev/null 2>&1 ; then
	    return 1
	fi

    if [ ! -d "${PIDDIR}" ]; then
        mkdir -p "${PIDDIR}"
        chown "${DAEMON_USER}":"${DAEMON_USER}" "${PIDDIR}"
    fi

    start-stop-daemon --start --user ${DAEMON_USER} --chuid ${DAEMON_USER} --background --make-pidfile --pidfile ${PIDFILE} --exec ${DAEMON} -- ${DAEMON_ARGS}
    dcm4chee_wait_start $?
    return $?
}

dcm4chee_wait_start() {
	local STATUS=$1
	local i=0
	while : ; do
        PIDTMP=$(pidofproc -p $PIDFILE $DAEMON)
        if [ -n "${PIDTMP:-}" ] && kill -0 "${PIDTMP:-}" 2> /dev/null; then
            return $STATUS
        fi

        if [ $i = "20" ] ; then
            DCM4CHEE_INIT_MESSAGE="The dcm4chee $JBOSS_HOME instance did not start within 20 seconds. Please read the log files to discover problems"
            return 2
        fi

        log_progress_msg "."
        sleep 1
        i=$(($i+1))
	done
}

#
# Function that stops the daemon/service
#
do_stop()
{
	# Return
	#   0 if daemon has been stopped
	#   1 if daemon was already stopped
	#   2 if daemon could not be stopped
	#   other if a failure occurred

	if pidofproc -p $PIDFILE "$DAEMON" > /dev/null 2>&1 ; then
        start-stop-daemon --stop --pidfile ${PIDFILE}
        dcm4chee_wait_stop $?
        return $?
    else
	    return 1
	fi
}

dcm4chee_wait_stop() {
	local STATUS=$1

	PIDTMP=$(pidofproc -p $PIDFILE $DAEMON)
	if [ -n "${PIDTMP:-}" ] && kill -0 "${PIDTMP:-}" 2> /dev/null; then
	        local i=0
	        while kill -0 "${PIDTMP:-}" 2> /dev/null;  do
	                if [ $i = '60' ]; then
	                        break
	                        STATUS=2
	                fi
	                log_progress_msg "."
	                sleep 1
	                i=$(($i+1))
	        done
	        return $STATUS
	else
	    return $STATUS
	fi
}

case "$1" in
  start)
	log_daemon_msg "Starting $DESC" "$NAME"
    do_start
	RET_STATUS=$?
	case "$RET_STATUS" in
		0|1)
			[ $RET_STATUS = 1 ] && log_warning_msg "${NAME} was already running"
	        ;;
		2)
			log_failure_msg
			print_error_msg
			exit 1
			;;
	esac
    ;;
  stop)
	log_daemon_msg "Stopping $DESC" "$NAME"
    do_stop
	RET_STATUS=$?
	case "$RET_STATUS" in
		0|1)
			[ $RET_STATUS = 1 ] && log_warning_msg "${NAME} was not running"
	        ;;
		2)
		    log_failure_msg
			print_error_msg
			exit 1
	        ;;
	esac
    ;;
  restart)
	log_daemon_msg "Restarting $DESC" "$NAME"
	do_stop
	case "$?" in
		0|1)
			do_start
			case "$?" in
				0)
					log_end_msg 0
					;;
				1|*)
					log_end_msg 1 # Old process is still or failed to running
					print_error_msg
					exit 1
					;;
			esac
			;;
		*)
			# Failed to stop
			log_end_msg 1
			print_error_msg
			exit 1
			;;
	esac
	;;
  status)
	status_of_proc -p $PIDFILE "dcm4chee" "$NAME"
	exit $?
	;;
  *)
    echo "Usage: ${SCRIPTNAME} {start|stop|restart|status}" >&2
    exit 3
    ;;
esac

exit 0

